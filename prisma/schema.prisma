generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model advertisement {
  id          Int     @id @default(autoincrement())
  userId      Int
  productId   Int
  title       String
  description String
  user        user    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "advertisement_fk0")
  product     product @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "advertisement_fk1")
}

model finance {
  id          Int      @id @default(autoincrement())
  userId      Int
  value       Int
  isEntry     Boolean
  description String
  date        DateTime @db.Date
  user        user     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "finance_fk0")
}

model message {
  id      Int    @id @default(autoincrement())
  userId  Int
  title   String
  message String
  user    user   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "message_fk0")
}

model order {
  id           Int            @id @default(autoincrement())
  userId       Int
  value        Int
  date         DateTime       @db.Date
  user         user           @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_fk0")
  orderProduct orderProduct[]
  shipping     shipping[]
}

model orderProduct {
  id        Int     @id @default(autoincrement())
  productId Int
  orderId   Int
  quantity  Int
  order     order   @relation(fields: [orderId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orderProduct_fk0")
  product   product @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orderProduct_fk1")
}

model product {
  id            Int             @id @default(autoincrement())
  userId        Int
  name          String
  buyPrice      Int
  sellPrice     Int
  stock         Int
  advertisement advertisement[]
  orderProduct  orderProduct[]
  user          user            @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_fk0")
}

model session {
  id     Int    @id @default(autoincrement())
  userId Int    @unique
  token  String
  user   user   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "session_fk0")
}

model shipping {
  id           Int    @id @default(autoincrement())
  orderId      Int
  trackingCode String
  order        order  @relation(fields: [orderId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "shipping_fk0")
}

model user {
  id            Int             @id @default(autoincrement())
  username      String          @db.VarChar(255)
  email         String          @unique @db.VarChar(255)
  password      String          @db.VarChar(255)
  advertisement advertisement[]
  finance       finance[]
  message       message[]
  order         order[]
  product       product[]
  session       session?
}
